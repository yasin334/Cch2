import java.io.*;

// Custom exception for invalid config version
class InvalidConfigVersionException extends Exception {
    public InvalidConfigVersionException(String message) {
        super(message);
    }
}

public class C4 {
    public static void main(String[] args) {
        BufferedReader reader = null;

        try {
            // Try to open config.txt from the project root
            reader = new BufferedReader(new FileReader("config.txt"));

            // Read the first line (config version)
            String versionLine = reader.readLine();
            int version = Integer.parseInt(versionLine); // May throw NumberFormatException

            // Check if version is acceptable
            if (version < 2) {
                throw new InvalidConfigVersionException("Config version too old!");
            }

            // Read the second line (file path)
            String filePath = reader.readLine();
            File file = new File(filePath);

            // Check if the file exists
            if (!file.exists()) {
                throw new IOException("Referenced file does not exist: " + filePath);
            }

            // All good
            System.out.println("Config file read successfully.");

        } catch (FileNotFoundException e) {
            System.out.println("Error: config.txt not found.");
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        } catch (NumberFormatException e) {
            System.out.println("Error: First line is not a valid number.");
        } catch (InvalidConfigVersionException e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            System.out.println("Config read attempt finished.");
            try {
                if (reader != null) {
                    reader.close();
                }
            } catch (IOException e) {
                System.out.println("Error closing the file reader.");
            }
        }
    }
}
